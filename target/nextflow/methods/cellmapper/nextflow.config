manifest {
  name = 'methods/cellmapper'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.12.1-edge'
  version = 'build_main'
  description = 'k-NN-based mapping of cells across representations to transfer labels, embeddings and expression values. \nWorks for millions of cells, on CPU and GPU, across molecular modalities, between spatial and non-spatial data, \nfor arbitrary query and reference datasets. We treat data denoising as self-mapping, where the query and reference datasets are the same. \nBased on some joint representation (here: PCA), CellMapper computes a k-NN graph and applies a kernel function to compute edge weights. Here,\nwe use a kernel based on Jaccard similarity (as e.g. in HNOCA-tools) or UMAP\'s `fuzzy_simplicial_set` (as in scanpy). Given the row-normalized \nweighted adjacency matrix, we simulate a t-step random walk to smooth the data, similar to MAGIC. For large t-values, we also provide a spectral \napproximation of the application of the t-step transition matrix to the data (not used here). \n'
}

process.container = 'nextflow/bash:latest'

// detect tempdir
tempDir = java.nio.file.Paths.get(
  System.getenv('NXF_TEMP') ?:
    System.getenv('VIASH_TEMP') ?: 
    System.getenv('TEMPDIR') ?: 
    System.getenv('TMPDIR') ?: 
    '/tmp'
).toAbsolutePath()

profiles {
  no_publish {
    process {
      withName: '.*' {
        publishDir = [
          enabled: false
        ]
      }
    }
  }
  mount_temp {
    docker.temp            = tempDir
    podman.temp            = tempDir
    charliecloud.temp      = tempDir
  }
  docker {
    docker.enabled         = true
    // docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  podman {
    podman.enabled         = true
    docker.enabled         = false
    singularity.enabled    = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  shifter {
    shifter.enabled        = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    charliecloud.enabled   = false
  }
  charliecloud {
    charliecloud.enabled   = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
  }
}

process{
  withLabel: lowmem { memory = 20.Gb }
  withLabel: midmem { memory = 50.Gb }
  withLabel: highmem { memory = 100.Gb }
  withLabel: lowcpu { cpus = 5 }
  withLabel: midcpu { cpus = 15 }
  withLabel: highcpu { cpus = 30 }
  withLabel: lowtime { time = 1.h }
  withLabel: midtime { time = 4.h }
  withLabel: hightime { time = 8.h }
  withLabel: veryhightime { time = 24.h }
}


