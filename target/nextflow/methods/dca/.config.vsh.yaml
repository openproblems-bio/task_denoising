name: "dca"
namespace: "methods"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--input_train"
    info:
      label: "Training data"
      summary: "The subset of molecules used for the training dataset"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
    example:
    - "resources_test/denoising/pancreas/train.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    info:
      label: "Denoised data"
      summary: "A denoised dataset as output by a method."
      slots:
        layers:
        - type: "integer"
          name: "denoised"
          description: "denoised data"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
    example:
    - "resources_test/denoising/pancreas/denoised.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--epochs"
    description: "Number of total epochs in training"
    info: null
    default:
    - 300
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
test_resources:
- type: "python_script"
  path: "run_and_check_output.py"
  is_executable: true
- type: "python_script"
  path: "check_method_config.py"
  is_executable: true
- type: "file"
  path: "library.bib"
- type: "file"
  path: "resources_test/denoising/pancreas"
  dest: "resources_test/denoising/pancreas"
info:
  label: "DCA"
  summary: "A deep autoencoder with ZINB loss function to address the dropout effect\
    \ in count data"
  description: "\"Deep Count Autoencoder\n\nRemoves the dropout effect by taking the\
    \ count structure, overdispersed nature and sparsity of the data into account\
    \ \nusing a deep autoencoder with zero-inflated negative binomial (ZINB) loss\
    \ function.\"\n"
  reference: "eraslan2019single"
  documentation_url: "https://github.com/theislab/dca#readme"
  repository_url: "https://github.com/theislab/dca"
  v1:
    path: "openproblems/tasks/denoising/methods/dca.py"
    commit: "b3456fd73c04c28516f6df34c57e6e3e8b0dab32"
  preferred_normalization: "counts"
  type: "method"
  type_info:
    label: "Method"
    summary: "A method."
    description: "A denoising method to remove noise (i.e. technical artifacts) from\
      \ a dataset.\n"
status: "enabled"
license: "MIT"
links:
  repository: "https://github.com/openproblems-bio/task_denoising"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "python:3.9"
  namespace_separator: "/"
  setup:
  - type: "apt"
    packages:
    - "procps"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "anndata~=0.8.0"
    - "scanpy"
    - "pyyaml"
    - "requests"
    - "jsonschema"
    - "git+https://github.com/scottgigante-immunai/dca.git@patch-1"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/methods/dca/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/methods/dca"
  executable: "target/nextflow/methods/dca/main.nf"
  viash_version: "0.9.0-RC6"
  git_commit: "71fd29174b340923af294f978d1bfcaa3c9592b5"
  git_remote: "https://github.com/openproblems-bio/task_denoising"
package_config:
  name: "task_denoising"
  version: "build_main"
  description: "An OpenProblems benchmark task.\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources_test/denoising/"
      dest: "resources_test/denoising"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/common/"
      dest: "resources_test/common"
  viash_version: "0.9.0-RC6"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }"
  keywords:
  - "single-cell"
  - "openproblems"
  - "benchmark"
  - "denoising"
  license: "MIT"
  organization: "openproblems-bio"
  links:
    repository: "https://github.com/openproblems-bio/task_denoising"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_denoising/issues"
